import path from 'path';

export default function unitTemplate(options) {
  const {
    charSet,
    directoryMode,
    extraOptions,
    fileMode,
    permissions,
    rootDirectory, 
    share, 
    smbHost, 
    timeout,
    user,
  } = options;
  let { password } = options;
  const what = `//${smbHost}/${share}`
  const where = path.join(rootDirectory, smbHost, share);

  // build unit mount options
  let optionalOptions = extraOptions && extraOptions[extraOptions.length - 1] !== ',' ? `${extraOptions},` : extraOptions; 
  if (permissions === 'rw') {
    optionalOptions = `${optionalOptions}file_mode=${fileMode},dir_mode=${directoryMode},`;
  }
  optionalOptions = user ? `${optionalOptions}user=${user},` : optionalOptions;
  optionalOptions = password ? `${optionalOptions}password=${password},` : optionalOptions;

  const unitFileContent = `[Unit]
  Description=${share} smb mount generated by systemd-my-smb
  After=network.target
  
[Mount]
  What=${what}
  Where=${where}
  Type=cifs
  Options=_netdev,iocharset=${charSet},${permissions}${optionalOptions ? `,${optionalOptions}` : ''}
  TimeoutSec=${timeout}
  
[Install]
  WantedBy=multi-user.target`;

  // memory security
  password = null;

  return unitFileContent;
}